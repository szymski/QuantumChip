/*-----------------------------------
    Semantic analyser utils
-------------------------------------*/

partial class QC_SemanticAnalyser {
    
    var Time = 0; // Analysis time
    
    var InputSequence;
    
    /*
        Constructor
    */
    function QC_SemanticAnalyser(sequence) {
        var startTime = SysTime();
        
        assert(sequence != null, "Input is nil. Sequence tree expected.");
        
        this.InputSequence = sequence;
        this:Analyse();
        
        this.Time = SysTime() - startTime;
    }
    
    /*-----------------------------------
        Errors
    -------------------------------------*/
    
    var Errored = false;
    var ErrorLine, ErrorCharacter;
    
    function Error(message) {
        error(message);
    }
    
    function ErrorToken(token, message) {
        this.Errored, this.ErrorLine, this.ErrorCharacter = true, token[3], token[4] - #token[2];
        
        error("Line " .. this.ErrorLine .. ", char " .. this.ErrorCharacter .. ": " .. message);
    }
    
} 
  
/*-----------------------------------
    Testing
-------------------------------------*/

#if DEBUG 
QC.DoTest();  
#endif   