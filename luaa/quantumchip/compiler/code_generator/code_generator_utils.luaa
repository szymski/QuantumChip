/*-----------------------------------
    Code generator utils
-------------------------------------*/

partial class QC_CodeGenerator {
    
    var Time = 0; // Generating time
    var InputSequence;
    
    var OutputCode;
    
    /*
        Constructor
    */ 
    function QC_CodeGenerator(sequence) {
        var startTime = SysTime();
        
        assert(sequence != null, "Input is nil. Sequence tree expected.");
        
        this.InputSequence = sequence;
        this:Generate();
        
        this.Time = SysTime() - startTime;
    }
    
    /*-----------------------------------
        Helpers
    -------------------------------------*/
    
    /*
        Compiles instructions into strings, so that they can be put
    */
    function CompileToString(...) {
        var instructions = { ... };
        var compiled = { };
        
        foreach(var instruction in instructions) {
            var codeTbl = { };
            instruction:GenerateCode(this, codeTbl);
            compiled[#compiled + 1] = table.concat(codeTbl, "");
        }
        
        return unpack(compiled);
    }
} 
 
/*-----------------------------------
    Testing
-------------------------------------*/

#if DEBUG 
QC.DoTest();  
#endif  